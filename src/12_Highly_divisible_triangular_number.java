// The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

// 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

// Let us list the factors of the first seven triangle numbers:
//  1: 1
//  3: 1,3
//  6: 1,2,3,6
// 10: 1,2,5,10
// 15: 1,3,5,15
// 21: 1,3,7,21
// 28: 1,2,4,7,14,28
// We can see that 28 is the first triangle number to have over five divisors.

// What is the value of the first triangle number to have over five hundred divisors?

class ProjectEuler {
    public static void main(String[] args) {
        long sum = 0;
        int i = 0, divisors = 0;
        while (divisors < 500) {
            i++;
            sum += i;
            divisors = ProjectEuler.getDivisorCount(sum);
            System.out.println("" + sum + " : " + i + " : " + divisors); 
        }
        System.out.println(sum); 
    }

    private static int getDivisorCount(long n) {
        int divisorCount = 0, sqrt = (int)Math.sqrt(n);
        for (int i = 1; i <= sqrt; i++) {
            if (n % i == 0) divisorCount += 2;
        }
        return divisorCount;
    }
}